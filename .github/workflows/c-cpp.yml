name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: update
      run: sudo apt-get update && sudo apt-get -y install git gnupg flex bison gperf libsdl1.2-dev build-essential zip curl libncurses5-dev zlib1g-dev lib32z1-dev lib32ncurses5-dev sharutils lzop wget libssl-dev
    - name: download toolchains
      run: git clone https://github.com/4Fwolf/4.6.x-google_prerelease_toolchain.git toolchains
    - name: download rk-tools
      run: wget http://www.haoyuelectronics.com/service/RK3066/tools/linux/rk-tools.zip && unzip rk-tools 
    - name: install rk-tools
      run: cd rk-tools-master && make && sudo make install && cd ..       
    - name: setEnv1
      run: export ARCH=arm && echo $ARCH 
    - name: setEnv2
      run: export CROSS_COMPILE=$PWD/toolchains/arm-eabi-4.6/bin/arm-eabi- && echo $CROSS_COMPILE && $CC --version
    - name: make kernal
      run: make -j 4 
    - name: crc kernal
      run: mtime=$(date '+%m_%d_%I_%M_%S_%p') && mkdir output && rkcrc -k arch/arm/boot/Image output/kernel_circ_${mtime}.img && cp kernel_circ_${mtime}.img kernel.img
    - name: upload
      run: curl -F "file=@output/kernel_circ_${mtime}.img" https://xobyx.tk/up/
    - name: Download a Build Artifact
      uses: actions/download-artifact@v3.0.0
      with:
        name: kernal
        path: output
